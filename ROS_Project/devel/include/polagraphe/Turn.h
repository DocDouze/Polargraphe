// Generated by gencpp from file polagraphe/Turn.msg
// DO NOT EDIT!


#ifndef POLAGRAPHE_MESSAGE_TURN_H
#define POLAGRAPHE_MESSAGE_TURN_H

#include <ros/service_traits.h>


#include <polagraphe/TurnRequest.h>
#include <polagraphe/TurnResponse.h>


namespace polagraphe
{

struct Turn
{

typedef TurnRequest Request;
typedef TurnResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Turn
} // namespace polagraphe


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::polagraphe::Turn > {
  static const char* value()
  {
    return "169e3e5fa323f0942d122e1ff5c4046c";
  }

  static const char* value(const ::polagraphe::Turn&) { return value(); }
};

template<>
struct DataType< ::polagraphe::Turn > {
  static const char* value()
  {
    return "polagraphe/Turn";
  }

  static const char* value(const ::polagraphe::Turn&) { return value(); }
};


// service_traits::MD5Sum< ::polagraphe::TurnRequest> should match 
// service_traits::MD5Sum< ::polagraphe::Turn > 
template<>
struct MD5Sum< ::polagraphe::TurnRequest>
{
  static const char* value()
  {
    return MD5Sum< ::polagraphe::Turn >::value();
  }
  static const char* value(const ::polagraphe::TurnRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::polagraphe::TurnRequest> should match 
// service_traits::DataType< ::polagraphe::Turn > 
template<>
struct DataType< ::polagraphe::TurnRequest>
{
  static const char* value()
  {
    return DataType< ::polagraphe::Turn >::value();
  }
  static const char* value(const ::polagraphe::TurnRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::polagraphe::TurnResponse> should match 
// service_traits::MD5Sum< ::polagraphe::Turn > 
template<>
struct MD5Sum< ::polagraphe::TurnResponse>
{
  static const char* value()
  {
    return MD5Sum< ::polagraphe::Turn >::value();
  }
  static const char* value(const ::polagraphe::TurnResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::polagraphe::TurnResponse> should match 
// service_traits::DataType< ::polagraphe::Turn > 
template<>
struct DataType< ::polagraphe::TurnResponse>
{
  static const char* value()
  {
    return DataType< ::polagraphe::Turn >::value();
  }
  static const char* value(const ::polagraphe::TurnResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // POLAGRAPHE_MESSAGE_TURN_H
